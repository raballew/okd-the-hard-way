apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: project-request
  namespace: openshift-config
objects:
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    annotations:
      openshift.io/description: ${PROJECT_DESCRIPTION}
      openshift.io/display-name: ${PROJECT_DISPLAYNAME}
      openshift.io/requester: ${PROJECT_REQUESTING_USER}
      contact: ${PROJECT_ADMIN_USER}
    name: ${PROJECT_NAME}
  spec: {}
  status: {}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: admin
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
- apiVersion: v1
  kind: "LimitRange"
  metadata:
    name: default-limits
  spec:
    limits:
      - type: "Container"
        default:
          cpu: "500m"
          memory: "512Mi"
        defaultRequest:
          cpu: "250m"
          memory: "256Mi"
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: default-quota
  spec:
    hard:
      configmaps: "10"
      persistentvolumeclaims: "10"
      pods: "10"
      replicationcontrollers: "10"
      secrets: "10"
      services: "3"
      services.loadbalancers: "0"
      services.nodeports: "0"
      requests.cpu: "500m"
      requests.memory: "512Mi"
      requests.storage: "5Gi"
      limits.cpu: "1"
      limits.memory: "1Gi"
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: deny-all
  spec:
    podSelector: {}
    ingress: []
    egress: []
    policyTypes:
    - Ingress
    - Egress
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: allow-same-namespace
  spec:
    podSelector: {}
    ingress:
    - from:
      - podSelector: {}
    egress:
    - to:
      - podSelector: {}
    policyTypes:
    - Ingress
    - Egress
# conversion of the MetalLB range of 192.168.200.101-192.168.200.200 to CIDR
# https://www.ipaddressguide.com/cidr
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: allow-from-loadbalancer
  spec:
    podSelector: {}
    ingress:
    - from:
      - ipBlock:
          cidr: 192.168.200.101/32
      - ipBlock:
          cidr: 192.168.200.104/29
      - ipBlock:
          cidr: 192.168.200.112/28
      - ipBlock:
          cidr: 192.168.200.128/26
      - ipBlock:
          cidr: 192.168.200.192/29
      - ipBlock:
          cidr: 192.168.200.200/32
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-ingress
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-monitoring
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: monitoring
    podSelector: {}
    policyTypes:
    - Ingress
parameters:
- name: PROJECT_NAME
  required: true
- name: PROJECT_DISPLAYNAME
- name: PROJECT_DESCRIPTION
- name: PROJECT_ADMIN_USER
  required: true
- name: PROJECT_REQUESTING_USER
